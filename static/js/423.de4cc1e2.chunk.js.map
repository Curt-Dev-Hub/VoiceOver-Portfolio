{"version":3,"file":"static/js/423.de4cc1e2.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","pages/contact/ContactPage.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, { useRef } from \"react\";\r\nimport './ContactPage.css';\r\nimport emailjs from '@emailjs/browser';\r\n\r\n\r\nfunction ContactPage() {\r\n    const form = useRef();\r\n    const sendEmail = (e) => {\r\n        e.preventDefault();\r\n    \r\n        emailjs.sendForm('service_79js3m6', 'voice_u51c8xy', form.current, 'P7bYMIcWgX18p10TQ')\r\n          .then((result) => {\r\n              console.log(result.text);\r\n          }, (error) => {\r\n              console.log(error.text);\r\n          }\r\n          );\r\n          e.target.reset();\r\n    };\r\n    return (\r\n        <section className=\"contact-page-wrapper\">\r\n            <h2>Make that Connection</h2>\r\n            <div className=\"form-wrapper\">\r\n                <p className=\"form-info\">Get in touch with me via email using the form below, <br></br>\r\n                    alternatively feel free to contact me on the social platforms above.<br></br>\r\n                    I look forward to speaking with you!\r\n                </p>\r\n                <form ref={form} onSubmit={sendEmail}>\r\n                    <input type=\"text\" placeholder=\"Full Name\" \r\n                    name=\"user_name\" required/>\r\n\r\n                    <input type=\"email\" placeholder=\"Email\" \r\n                    name=\"user_email\" required/>\r\n\r\n                    <input type=\"text\" placeholder=\"Subject\" \r\n                    name=\"subject\" required/>\r\n\r\n                    <textarea name=\"message\" cols=\"30\" rows=\"10\" ></textarea>\r\n                    <button className=\"contact submit\" type=\"submit\">Send Message</button>\r\n                </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ContactPage;"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","_createClass","httpResponse","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","useRef","_jsxs","className","children","_jsx","ref","onSubmit","e","preventDefault","emailjs","current","then","result","console","log","error","reset","type","placeholder","name","required","cols","rows"],"sourceRoot":""}