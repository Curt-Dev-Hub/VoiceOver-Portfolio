{"version":3,"file":"static/js/430.e1b5e909.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","components/audioPlayer/AudioPlayer.js","pages/demos/DemoPage.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import React, { useEffect, useState } from \"react\";\r\nimport './AudioPlayer.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport accent1 from '../../assets/audio/accents/FunkyAccent1.mp3';\r\nimport animation1 from '../../assets/audio/animation/Distinguished_Voice.mp3';\r\nimport character1 from '../../assets/audio/character/FunZone_CharacterAdvert.mp3';\r\nimport character2 from '../../assets/audio/character/Mature Gent_Advert.mp3';\r\nimport character3 from '../../assets/audio/character/Surfer_Guy.mp3';\r\nimport character4 from '../../assets/audio/character/Evil Character.mp3';\r\nimport explainer1 from '../../assets/audio/explainer/Glaucoma_Explainer.mp3';\r\nimport narration1 from '../../assets/audio/narration/Youger Audience Narration.mp3';\r\nimport Commercial1 from '../../assets/audio/demo-reels/DemoReel-Commercial.mp3';\r\n\r\n\r\nconst audioFiles = [\r\n    {\r\n        id: 1,\r\n        name: 'Animation',\r\n        audioSrc: animation1\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Accents',\r\n        audioSrc: accent1\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Character',\r\n        audioSrc: [character1,character2,character3,character4]\r\n    },\r\n    {\r\n        id:4,\r\n        name: 'Explainer',\r\n        audioSrc: explainer1\r\n    },\r\n    {\r\n        id:5,\r\n        name: 'Narration',\r\n        audioSrc: narration1\r\n    },\r\n    {\r\n        id:6,\r\n        name: \"Demo Reels\",\r\n        audioSrc: Commercial1,\r\n        type: \"Commercials Reel\"\r\n    } \r\n];\r\n\r\n\r\nexport default function AudioPlayer({style}) {\r\n    \r\n    const [selectedStyle, setSelectedStyle] = useState('Demo Reels');\r\n\r\n    useEffect(() => {\r\n        setSelectedStyle(style);\r\n    }, [style]);\r\n\r\n    return (\r\n        <div className=\"audio-wrapper\">\r\n            <h3 className=\"demo-h2\">Play audio samples here</h3>\r\n\r\n            {/* <div className=\"media-player-wrap\"> \r\n                {audioFiles.map((audio) => ( \r\n                    audio.name === selectedStyle && ( Array.isArray(audio.audioSrc) ? \r\n                    audio.audioSrc.map(e => ( \r\n                    <> {selectedStyle === \"Demo Reels\" ? \r\n                        <label key={uuidv4()} className=\"audioPlayerLabel\">{audio.type}</label> \r\n                            : null} \r\n                        <audio key={uuidv4()} controls> <source src={e} type=\"audio/mpeg\" /></audio>\r\n                    </> )) : \r\n                    <> {selectedStyle ===\"Demo Reels\" ? \r\n                        <label key={uuidv4()} className=\"audioPlayerLabel\">{audio.type}</label> : \r\n                            null} \r\n                        <audio key={uuidv4()} controls> <source src={audio.audioSrc} type=\"audio/mpeg\" /></audio>\r\n                    </> )))} \r\n            </div> */}\r\n            \r\n            {/* ------------ Refactored to include div element with uuid key instead of fragment ------------------------ */}\r\n            <div className=\"media-player-wrap\"> \r\n                {audioFiles.map((audio) => ( \r\n                    audio.name === selectedStyle && ( Array.isArray(audio.audioSrc) ? \r\n                    audio.audioSrc.map(e => ( \r\n                        <div key={uuidv4()}>\r\n                            {selectedStyle === \"Demo Reels\" ? \r\n                            <label className=\"audioPlayerLabel\">{audio.type}</label> : null} \r\n                            <audio controls> <source src={e} type=\"audio/mpeg\" /></audio>\r\n                        </div>\r\n                    )) : \r\n                    <div key={uuidv4()}>\r\n                        {selectedStyle ===\"Demo Reels\" ? \r\n                        <label className=\"audioPlayerLabel\">{audio.type}</label> : null} \r\n                        <audio controls> <source src={audio.audioSrc} type=\"audio/mpeg\" /></audio>\r\n                    </div>\r\n                )))} \r\n            </div>\r\n\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport './DemoPage.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport AudioPlayer from \"../../components/audioPlayer/AudioPlayer\";\r\n\r\n// const voiceStyles = ['Animation', 'Character', 'eLearning', 'Explainer', 'Accents', 'Narration', 'Video_Game'];\r\n\r\n\r\n// export default function DemoPage() {\r\n//     const [selectedStyle, setSelectedStyle] = useState(\"Animation\");\r\n\r\n//     return (\r\n//         <div className=\"demo-wrapper\">\r\n//             <h2>Hear some of my voice samples</h2>\r\n//             <div className=\"inner-wrapper\">\r\n//                 <div className=\"buttons-wrapper\">\r\n//                     <h3 className=\"demo-h2\">Select a style ⬇️</h3>\r\n//                         {/* create group of buttons, giving them each a key id and onclick event */}\r\n//                         {voiceStyles.map((style, index) => (\r\n//                             <button autoFocus={index === 0} className=\"voice-style-btn\" key={style} onClick={() => setSelectedStyle(style)}> {style} </button>\r\n//                         ))}\r\n//                 </div>\r\n//                 {/* using logical AND operator to conditionally render the AudioPlayer component based on the value of the selectedStyle state. */}\r\n//                 {selectedStyle && <AudioPlayer style={selectedStyle} />}\r\n//             </div>\r\n//         </div>\r\n//     );    \r\n// }\r\n\r\n\r\n// 'Video Game' 'eLearning' - Removed Temporarily \r\n\r\nconst voiceStyles = ['Demo Reels', 'Animation', 'Character', 'Explainer', 'Accents', 'Narration'];\r\n\r\nexport default function DemoPage() {\r\n    const [selectedStyle, setSelectedStyle] = useState(\"Demo Reels\");\r\n\r\n    const handleClick = (style) => {\r\n        setSelectedStyle(style);\r\n        if (window.innerWidth < 632) {\r\n            const audioWrapper = document.querySelector('.audio-wrapper');\r\n            if (audioWrapper) {\r\n                window.scrollTo({\r\n                    top: audioWrapper.offsetTop,\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"demo-wrapper\">\r\n            <h2>Hear some of my voice samples</h2>\r\n            <div className=\"inner-wrapper\">\r\n                <div className=\"buttons-wrapper\">\r\n                    <h3 className=\"demo-h2\">Select a style ⬇️</h3>\r\n                    {voiceStyles.map((style, index) => (\r\n                        <button autoFocus={index === 0} className=\"voice-style-btn\" key={uuidv4()} onClick={() => handleClick(style)}> {style} </button>\r\n                    ))}\r\n                </div>\r\n                {selectedStyle && <AudioPlayer key={uuidv4()} style={selectedStyle} />}\r\n            </div>\r\n        </div>\r\n    );    \r\n}\r\n"],"names":["getRandomValues","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","arguments","length","undefined","options","buf","native","rnds","random","audioFiles","id","name","audioSrc","animation1","accent1","character1","character2","character3","character4","explainer1","narration1","Commercial1","type","AudioPlayer","_ref","style","_useState","useState","_useState2","_slicedToArray","selectedStyle","setSelectedStyle","useEffect","_jsxs","className","children","_jsx","map","audio","Array","isArray","e","controls","src","uuidv4","voiceStyles","DemoPage","index","autoFocus","onClick","window","innerWidth","audioWrapper","document","querySelector","scrollTo","top","offsetTop","behavior","handleClick"],"sourceRoot":""}